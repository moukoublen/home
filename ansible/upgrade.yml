---

- name: Update Packages
  hosts: apts
  become: true
  become_user: root
  tasks:
    # - name: Clean apt-get local repo
    #   ansible.builtin.apt:
    #     clean: true
    - name: Update apt repo and cache
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true
        cache_valid_time: 120

    # Get and display packages that need upgrade
    - name: Get Upgradable packages
      ansible.builtin.command:
        argv:
          - apt
          - list
          - --upgradable
        strip_empty_ends: true
      register: upgradable_packages
      changed_when: false
    - name: List Upgradable packages
      ansible.builtin.debug:
        var: upgradable_packages.stdout_lines
      changed_when: false

    - name: Upgrade all packages
      ansible.builtin.apt:
        force_apt_get: true
        upgrade: dist
        # force: true

    - name: Check if a reboot is needed
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_attributes: true
        get_mime: true
        get_checksum: false
      register: reboot_required_file
    - name: Display Reboot Required
      ansible.builtin.debug:
        var: reboot_required_file.stat.exists
      changed_when: false
    # - name: Reboot
    #   ansible.builtin.reboot:
    #     msg: "Reboot initiated by Ansible"
    #     connect_timeout: 5
    #     reboot_timeout: 300
    #     pre_reboot_delay: 0
    #     post_reboot_delay: 30
    #     test_command: uptime
    #   when: reboot_required_file.stat.exists


# - name: Restart serially if needed
#   hosts: apts
#   become: true
#   become_user: root
#   serial: 1
#   tasks:
#     - name: Check if a reboot is needed
#       ansible.builtin.stat:
#         path: /var/run/reboot-required
#         get_attributes: true
#         get_mime: true
#         get_checksum: false
#       register: reboot_required_file
#     - name: Reboot
#       ansible.builtin.reboot:
#         msg: "Reboot initiated by Ansible"
#         connect_timeout: 5
#         reboot_timeout: 300
#         pre_reboot_delay: 0
#         post_reboot_delay: 30
#         test_command: uptime
#       when: reboot_required_file.stat.exists
